#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <time.h>

#define RANGE 50

  FILE *backup;		
	FILE *tembackup;
	int Sy_time ()
{
	time_t now = time(NULL);
   	struct tm *t = localtime(&now);
	int day,month,year;
	month=t->tm_mon+1;
	day=t->tm_mday;
	year=t->tm_year+1900 ;
	int a;
    int i,len,date = 0;
	char d[50], m[50],y[50];
    snprintf(d, 10, "%d", day);
 	snprintf(m, 10, "%d", month);
 	snprintf(y, 10, "%d", year);

   	strcat(y, m);
  	strcat(y, d);
  	len = strlen(y);
	for(i=0; i<len; i++){
		date = date * 10 + (y[i] - '0' );
	}
		printf("%d", date);
		return date;	
}

void sorting(){
	
	
}

void compare( char name_compare[30],int *duplicate){
		
		char str1[30];
		*duplicate=0;
			while(fgets(str1,30,backup)!=NULL)  
			{
				str1[strlen(str1)-1] = '\0';		
			
					if (strcmp(str1,name_compare)==0)	
				{
						
				break;
				}
							
			}
			if (strcmp(str1,name_compare)!=0)
		
			{
			*duplicate=1;
			}
			
			}
			
void rewrite( char name_rewrite[30]){
		
	
		char str1[30];
			while(fgets(str1,30,backup)!=NULL) 
					{
					str1[strlen(str1)-1] = '\0';	
			
						 if (strcmp(str1,name_rewrite)==0)	
						{
						
							break;		
				
							}
							
						else 	
							{
						fprintf(tembackup,"%s\n",str1);	
						}
						
					}
					fprintf(tembackup,"\n");		
		}
void input_data(){
			char num[30];
			printf("Enter the flight Number:");
			gets(num);
			fprintf(tembackup,"\nFlight Number:%s",num);
	
			char fee[30];
			printf("Enter the total ticket fee:");
			gets(fee);
			fprintf(tembackup,"\nTotal ticket fee:%s",fee);
	
			char depart[30];
			printf("Enter the Depart:");
			gets(depart);
			fprintf(tembackup,"\nDepart:%s",depart);
	
			char destionation[30];
			printf("Enter the destionation:");
			gets(destionation);
			fprintf(tembackup,"\nDestionation:%s",destionation);
	
			char schedule[30];
			printf("Enter the depart schedule:");
			gets(schedule);
			fprintf(tembackup,"\nDepart Schedule:%s",schedule);
	
			char cla[30];
			printf("Enter the class of flight:");
			gets(cla);
			fprintf(tembackup,"\nClass:%s",cla);
	
			char passengers[30];
			printf("Enter the number of passengers:");
			gets(passengers);
	
}

void modify(){
		int error0;
		void modi(char [30]);
		int i;
		char name_modify[30];
		char str1[30];
		char ch;
		do{
		backup = fopen("flightinfo.txt", "a+");  
		printf("Enter the name:");
		fflush(stdin);
   		gets(name_modify);
   		compare(name_modify,&error0);
   		
		
   		if (error0==0)
   		{
   			rewind(backup);
   			void modi(char name_modify[30]);
			tembackup = fopen("tem.txt", "a+"); 
   			rewrite(name_modify);
			fprintf(tembackup,"%s",name_modify);
			input_data();
			fprintf(tembackup,"\n");
				for (i=0;i<8;i++)		
					{
						fgets(str1,30,backup);					
					}
					rewrite(name_modify);
   		printf("------------------------------------\n");
	   	printf("Modified Record\n");
   		printf("------------------------------------\n");
		fclose(backup); 
		remove("flightinfo.txt");
		fclose (tembackup);
		rename("tem.txt","flightinfo.txt");	 
		
		
		   } 
		    else if (error0==1){
		    printf("------------------------------------\n");	
		    printf("Undefined Name\n")	;
		    printf("------------------------------------\n");
		    fclose(backup);
			}
				printf("Add another customer?(Y/N)");
				fflush(stdin);
 				scanf("%c",&ch);
 				printf("------------------------------------\n");
				
				}
		
				while (ch =='Y');
			}	
	


void modi(char name_modi[30]){
		tembackup = fopen("tem.txt", "a+"); 
		 
		
   		char str1[30];	
   		int i;
			   rewrite(name_modi);
			
			fprintf(tembackup,"%s",name_modi);
			fflush(stdin);
			input_data();
			fprintf(tembackup,"\n");
				for (i=0;i<8;i++)		
					{
						fgets(str1,30,backup);					
					}
					rewrite(name_modi);
			
   		printf("------------------------------------\n");
	   	printf("Modified Record\n");
   		printf("------------------------------------\n");
		fclose(backup); 
		remove("flightinfo.txt");
		fclose (tembackup);
		rename("tem.txt","flightinfo.txt");	 
				 
		   }
	
void add()
	{
		char ch;
		int error;
		fflush(stdin);
		char name_add[30];
	do{					
		
		backup = fopen("flightinfo.txt", "a+");
		printf("Enter the name:");
		fflush(stdin);
   		gets(name_add);
   		compare(name_add,&error);
   		if (error==1)
   		{
		   fprintf(backup,"%s",name_add);
		   	char num[30];
			printf("Enter the flight Number:");
			gets(num);
			fprintf(backup,"\nFlight Number:%s",num);
	
			char fee[30];
			printf("Enter the total ticket fee:");
			gets(fee);
			fprintf(backup,"\nTotal ticket fee:%s",fee);
	
			char depart[30];
			printf("Enter the Depart:");
			gets(depart);
			fprintf(backup,"\nDepart:%s",depart);
	
			char destionation[30];
			printf("Enter the destionation:");
			gets(destionation);
			fprintf(backup,"\nDestionation:%s",destionation);
	
			char schedule[30];
			printf("Enter the depart schedule:");
			gets(schedule);
			fprintf(backup,"\nDepart Schedule:%s",schedule);
	
			char cla[30];
			printf("Enter the class of flight:");
			gets(cla);
			fprintf(backup,"\nClass:%s",cla);
	
			char passengers[30];
			printf("Enter the number of passengers:");
			gets(passengers);
			fprintf(backup,"\nNumber of Passengers:%s\n\n",passengers);
		   	fclose(backup);	
		   }
		   
		else 
		{
	 		char a;
	  	   printf("------------------------------------\n");
			printf("Existed Name \nWant to Modify?(Y/N)");
			fflush(stdin);
			scanf("%c",& a);
				if (a=='Y')
			{
				rewind(backup);
				modi(name_add);
				fclose(backup);		
		   }
		   	else{
		   		fclose(backup);	
		   }
		   
		   
		
	}

		
		printf("Add another customer?(Y/N)");
		fflush(stdin);
 				scanf("%c",&ch);
 				printf("------------------------------------\n");
				
				}
		
				while (ch =='Y');
				
	
}


void Delete(){
	
		int error4;
		int i;
		char ch;
		char name_delete[30];
		char str1[30];
		char b;
		do{		
		backup = fopen("flightinfo.txt", "a+"); 
		printf("Enter the name:");
		fflush(stdin);
   		gets(name_delete);
   		compare(name_delete,&error4);
   		
		   if (error4==0)
   		{
		   printf("Deleated record canoot be recover\nAre you sure?(Y/N)");
   			fflush(stdin);
		 	 scanf("%c",&b);
   			if ( b=='Y')
   			{
			 
   			rewind(backup);
			tembackup = fopen("tem.txt", "a+"); 
   			
			   rewrite(name_delete);
				for (i=0;i<8;i++)		
					{
						fgets(str1,30,backup);					
					}
					rewrite(name_delete);
   		printf("------------------------------------\n");
	   	printf("Deleated record\n");
   		printf("------------------------------------\n");
		fclose(backup); 
		remove("flightinfo.txt");
		fclose (tembackup);
		rename("tem.txt","flightinfo.txt");	 
		   }
		   else {
		   	printf("------------------------------------\n");
			printf("Cancelled\n");   
		printf("------------------------------------\n");   
		fclose(backup);
		 
	}
	}
	
		    else if (error4==1){
		   	fclose(backup);
			printf("------------------------------------\n");
		    printf("Undefined Name\n")	;
		    printf("------------------------------------\n");
			}


		printf("Add another customer?(Y/N)");
		fflush(stdin);
 				scanf("%c",&ch);
 				printf("------------------------------------\n");
				
				}
		
				while (ch =='Y');
			}	
	

			
void view(){
			
		backup = fopen("flightinfo.txt", "a+");
		char str1[30];
		while(fgets(str1,30,backup)!=NULL)
			{
   				printf("%s", str1);
   			}
   		printf("------------------------------------\n");
   		fclose(backup); 		
   		
}
void search(){
	
   		char ch;
		int error0;
		int i;
	do{	
		
		fclose(backup);
		backup = fopen("flightinfo.txt", "a+");   
		fflush(stdin);
		char name_search[30];
		char str1[30];
		rewind(backup);
		printf("Enter the name:");
   		gets(name_search);
		compare(name_search,&error0);
		
		if (error0==1)
   			{
		   printf("------------------------------------\n");
			printf("INEXISTED NAME\n------------------------------------\n");
			 
			 break;
			 }
			rewind(backup);
				while(fgets(str1,30,backup)!=NULL) 
			{
				str1[strlen(str1)-1] = '\0';		
					if (strcmp(str1,name_search)==0)	
				{
						
						for (i=0;i<7;i++)			
					{
						fgets(str1,30,backup);
						printf("%s",str1);						
					}
				fclose(backup);	 
				break;
				}
			}
			printf("------------------------------------\n");
			printf("Search another Customer?(Y/N)");
 				scanf("%c",&ch);
 				printf("------------------------------------\n");
				
			}
				while (ch =='Y'); 
			
		}	
		
		
void lucky()
{	int ppl[RANGE];
	int luckynum,q;
	char yesno;

	printf("Introduction\n");
	printf("In order to enjoy a discount, you are required to take a lucky draw.\n");
	printf("Do you want to take it? <Y/N>:");
	fflush(stdin);
	scanf("%c",&yesno);
	
	
	if (yesno=='Y'|| yesno=='y')
	{	printf("Please press <ENTER> to pick a number.");
				fflush(stdin);
				getchar();				
		
		printf("Here it comes:");
		
		for(q = 1; q <= 1; q++)
		{  do
    		{luckynum = rand() % 10+1;}
    		while(ppl[luckynum]);
				                 
			ppl[luckynum] = 1;
    		printf("%d, ", luckynum);
     	}         	
     	
		 switch (luckynum)
		{	case 1: printf("now you can enjoy a discount of 10%% off in offering a return flight.\n\n");
					break;
			case 2: printf("now you can enjoy a advanced seat reservation.\n\n");
					break;
			case 3: printf("now you can enjoy a discount of 25%% off in offering a travel insurance.\n\n");
					break;
			case 4: printf("now you can enjoy a discount of 20%% off in offering a return flight.\n\n");
					break;
			case 5: printf("now you can enjoy one day free pocket wifi rental for any booking.\n\n");
					break;
			case 6: printf("now you can enjoy a Starbuck drink in a discount of 30%% off.\n\n");
					break;
			case 7: printf("now you can upgrade class in a discount of 15%%.\n\n");
					break;
			case 8: printf("now you can enjoy a discount of 20%% off in applying a membership of Macro Polo.\n\n");
					break;
			case 9: printf("now you can enjoy a Pacific coffee drink in a discount of 30%% off.\n\n");
					break;
			case 10: printf("now you can upgrade class in a discount of 25%%.\n\n");
					break;
				}
	}
	else if (yesno=='N'|| yesno=='n')
	{	printf("Press <ENTER> back to main manual.\n");
		fflush(stdin);
		getchar();
	}
	else
	{	printf("Invalid input. Press <ENTER> to input again.\n");
		fflush(stdin);
		getchar();
		return lucky();
	}
}

	int main(){

	int option;


	printf("***Welcome to Air Hong Kong Flight Booking and Record System 2016***\n***The System is Developed  by CCIT4020 CLass No.NL4007***\n\n");
	do{
	   	
		   
		 
		fflush(stdin);
		printf("<Basic functions>\n1.Add New Redcord(s):\n2.Display All Flight Record:\n3.Modify Flight Record(s):\n4.Search Flight Record(s):\n5.Delete Flight Record:\n6.Lucky Draw:\n7.Quit the Programe\nWhat is your option<1-7>?");
		scanf("%d",&option);
		printf("------------------------------------\n");
		
		switch(option){
		
		case 1 :
				
				add();
				
				continue;
				
		case 2:
				view();
				
			continue;
				
		case 3:
				modify();
				continue; 
		case 4:			
				search();
			continue;
				
				
		case 5:
				Delete();
				continue;
		
		case 6:
				lucky();
				continue;
		
		case 7:
				break;
				
		
		default:
   				
				printf("INVALID input\n------------------------------------\n");
				break;	
			}
			
				
		}		
	while(option!=7);
			
	return 0;
	}
